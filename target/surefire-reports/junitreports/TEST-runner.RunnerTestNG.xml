<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="DESKTOP-KA64HP5" name="runner.RunnerTestNG" tests="16" failures="0" timestamp="2022-05-07T20:53:50 EET" time="292.361" errors="1">
  <testcase name="runScenario" time="21.952" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="15.525" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="15.579" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="24.075" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="13.801" classname="runner.RunnerTestNG">
    <error type="io.cucumber.testng.UndefinedStepException" message="The step &#039;user navigate to computers and select desktops&#039; and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When(&quot;user navigate to computers and select desktops&quot;)
public void user_navigate_to_computers_and_select_desktops() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;user add the simple computer with slow processor to the shopping cart&quot;)
public void user_add_the_simple_computer_with_slow_processor_to_the_shopping_cart() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;user navigate to shopping cart and check it out&quot;)
public void user_navigate_to_shopping_cart_and_check_it_out() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;add the address and continue&quot;)
public void add_the_address_and_continue(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or
    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When(&quot;continue to payment method and enter the payment information:&quot;)
public void continue_to_payment_method_and_enter_the_payment_information(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or
    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;user could see confirmation message: {string}&quot;)
public void user_could_see_confirmation_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user navigate to computers and select desktops' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("user navigate to computers and select desktops")
public void user_navigate_to_computers_and_select_desktops() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("user add the simple computer with slow processor to the shopping cart")
public void user_add_the_simple_computer_with_slow_processor_to_the_shopping_cart() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("user navigate to shopping cart and check it out")
public void user_navigate_to_shopping_cart_and_check_it_out() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("add the address and continue")
public void add_the_address_and_continue(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("continue to payment method and enter the payment information:")
public void continue_to_payment_method_and_enter_the_payment_information(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("user could see confirmation message: {string}")
public void user_could_see_confirmation_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:146)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:146)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase name="runScenario" time="16.354" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="16.691" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="18.667" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="20.467" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="18.831" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="16.145" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="16.280" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="15.540" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="20.621" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="20.403" classname="runner.RunnerTestNG"/>
  <system-out/>
  <testcase name="runScenario" time="21.430" classname="runner.RunnerTestNG"/>
  <system-out/>
</testsuite> <!-- runner.RunnerTestNG -->
